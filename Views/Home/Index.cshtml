@{
    ViewBag.Title = "Kurumlar";
}
<div class="card text-white bg-secondary mb-3 w-100 mt-2">
    <div class="card-header"><h1>Kurumlar | Nazım ÖZTÜRK</h1></div>
    <div class="card-body">
        <h5 class="card-title">Nazım ÖZTÜRK</h5>
        <p class="card-text">Kurum arama sayfasıdır.</p>
    </div>
</div>


<script>
    $(document).ready(function () {
        //$('#AlmsData').hide();
        //$('#PerculusData').hide();
        //$('#CustomersData').hide();
        //$('#a1').hide();
        //$('#p1').hide();
        //$('#c1').hide();

        const products = [
            { ID: 1, Name: 'Alms' },
            { ID: 2, Name: 'Perculus' }
        ];

        const orgData = [
            { ID: 1, Name: 'Sakarya' },
            { ID: 2, Name: 'Karasu' }
        ];

        const Urunler = $('#Products').dxSelectBox({
            dataSource: products,
            showClearButton: true,
            displayExpr: 'Name',
            valueExpr: 'ID',
            placeholder: 'Ürün Arama',
            searchEnabled: true,
        }).dxSelectBox('instance');

        const Kurumlar = $('#Organization').dxSelectBox({
            dataSource: orgData,
            showClearButton: true,
            displayExpr: 'Name',
            valueExpr: 'ID',
            placeholder: 'Kurum Arama',
            searchEnabled: true,
        }).dxSelectBox('instance');

        $('#success-contained').dxButton({
            stylingMode: 'contained',
            text: 'Sync YAP',
            type: 'success',
            width: '98%',
            onClick() {
                DevExpress.ui.notify('Sync İşlemi Başarılı Bir Şekilde Sonuçlandı');
            }
        });
        //ALMS Litesi

        async function AlmsDatasi() {
            var AtamaPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/Alms",
                    data: JSON.stringify({}),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });

            return AtamaPromise;
        }

        $("#AlmsData").dxDataGrid({
            dataSource: {
                load: async function GetDataForDxDataGrid() {
                    var ListPromise = new Promise((Resolve) => {
                        $.ajax({
                            type: "POST",
                            url: "/WebService.asmx/Alms",
                            data: JSON.stringify({}),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                        });
                    });
                    return ListPromise;
                }
            },
            paging: { pageSize: 25 },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [10, 25, 50, 100],
                showInfo: true
            },
            remoteOperations: false,
            rowAlternationEnabled: true, //Satırların Renklendirilmesini Sağlıyor
            searchPanel: {
                visible: true,
                highlightCaseSensitive: true,
                placeholder: 'Ara...',
            },
            groupPanel: { visible: true, emptyPanelText:'ALMS Verileri'},
            grouping: {
                autoExpandAll: false, //Sayfa Açılışınca Gruplar Kapalı Şekilde Gelecek.
                contextMenuEnabled: true
            },
            showBorders: true,
            showRowLines: true,
            //Kolonların Yeniden Boyutlandırılabilir mi ?
            allowColumnReordering: true,
            allowColumnResizing: true,
            filterRow: { visible: true }, //Satırlara Filtre Eklenebilir mi ?
            /*Kolon Gizlenebilir mi ?*/
            columnChooser: {
                enabled: true,
                allowSearch: true
            },
            columnAutoWidth: false,
            selection: { mode: "multiple" },
            sorting: { mode: "multiple" },
            scrolling: { useNative: true },
            stateStoring: {
                enabled: true, //Kullanıcıya Özel Grid Dizayn Yapılıp Yapılamayacağının Bilgisidir.
                type: "custom",
                savingTimeout: 0
            },
            headerFilter: { visible: true },
            export: {
                enabled: true
            },

            columns: [
                {
                    dataField: "Alms_OrganizationID",
                    caption: "Organizasyon ID",
                    dataType: "string"
                },
                {
                    dataField: "Alms_OrganizationName",
                    caption: "Kurum Adı",
                    dataType: "string"
                },
                {
                    dataField: "ALMS_Database",
                    caption: "Data Base",
                    dataType: "string"
                }
            ],
        }).dxDataGrid('instance');

        // Perculus Listesi

        async function PerculusDatasi() {
            var AtamaPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/Perculus",
                    data: JSON.stringify({}),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });

            return AtamaPromise;
        }

        $("#PerculusData").dxDataGrid({
            dataSource: {
                load: async function GetDataForDxDataGrid() {
                    var ListPromise = new Promise((Resolve) => {
                        $.ajax({
                            type: "POST",
                            url: "/WebService.asmx/Perculus",
                            data: JSON.stringify({}),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                        });
                    });
                    return ListPromise;
                }
            },
            paging: { pageSize: 25 },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [10, 25, 50, 100],
                showInfo: true
            },
            remoteOperations: false,
            rowAlternationEnabled: true, //Satırların Renklendirilmesini Sağlıyor
            searchPanel: {
                visible: true,
                highlightCaseSensitive: true,
                placeholder: 'Ara...',
            },
            groupPanel: { visible: true, emptyPanelText: 'Perculus Verileri'},
            grouping: {
                autoExpandAll: false, //Sayfa Açılışınca Gruplar Kapalı Şekilde Gelecek.
                contextMenuEnabled: true
            },
            showBorders: true,
            showRowLines: true,
            //Kolonların Yeniden Boyutlandırılabilir mi ?
            allowColumnReordering: true,
            allowColumnResizing: true,
            filterRow: { visible: true }, //Satırlara Filtre Eklenebilir mi ?
            /*Kolon Gizlenebilir mi ?*/
            columnChooser: {
                enabled: true,
                allowSearch: true
            },
            columnAutoWidth: false,
            selection: { mode: "multiple" },
            sorting: { mode: "multiple" },
            scrolling: { useNative: true },
            stateStoring: {
                enabled: true, //Kullanıcıya Özel Grid Dizayn Yapılıp Yapılamayacağının Bilgisidir.
                type: "custom",
                savingTimeout: 0
            },
            headerFilter: { visible: true },
            export: {
                enabled: true
            },

            columns: [
                {
                    dataField: "Perculus_Orgid",
                    caption: "Organizasyon ID",
                    dataType: "string"
                },
                {
                    dataField: "Organizasyon_adi",
                    caption: "Kurum Adı",
                    dataType: "string"
                },
                {
                    dataField: "P_Database",
                    caption: "Data Base",
                    dataType: "string"
                }
            ],
        }).dxDataGrid('instance');

        //Customer Listesi

        async function CustomersData() {
            var AtamaPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/Customers",
                    data: JSON.stringify({}),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });

            return AtamaPromise;
        }

        $("#CustomersData").dxDataGrid({
            dataSource: {
                load: async function GetDataForDxDataGrid() {
                    var ListPromise = new Promise((Resolve) => {
                        $.ajax({
                            type: "POST",
                            url: "/WebService.asmx/Customers",
                            data: JSON.stringify({}),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                        });
                    });
                    return ListPromise;
                }
            },
            paging: { pageSize: 25 },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [10, 25, 50, 100],
                showInfo: true
            },
            remoteOperations: false,
            rowAlternationEnabled: true, //Satırların Renklendirilmesini Sağlıyor
            searchPanel: {
                visible: true,
                highlightCaseSensitive: true,
                placeholder: 'Ara...',
            },
            groupPanel: { visible: true, emptyPanelText: 'Kişi Verileri'},
            grouping: {
                autoExpandAll: false, //Sayfa Açılışınca Gruplar Kapalı Şekilde Gelecek.
                contextMenuEnabled: true
            },
            showBorders: true,
            showRowLines: true,
            //Kolonların Yeniden Boyutlandırılabilir mi ?
            allowColumnReordering: true,
            allowColumnResizing: true,
            filterRow: { visible: true }, //Satırlara Filtre Eklenebilir mi ?
            /*Kolon Gizlenebilir mi ?*/
            columnChooser: {
                enabled: true,
                allowSearch: true
            },
            columnAutoWidth: false,
            selection: { mode: "multiple" },
            sorting: { mode: "multiple" },
            scrolling: { useNative: true },
            stateStoring: {
                enabled: true, //Kullanıcıya Özel Grid Dizayn Yapılıp Yapılamayacağının Bilgisidir.
                type: "custom",
                savingTimeout: 0
            },
            headerFilter: { visible: true },
            export: {
                enabled: true
            },

            columns: [
                {
                    dataField: "Kurum_adi",
                    caption: "Kurum Adı",
                    dataType: "string"
                },
                {
                    dataField: "Yet_Ad_Soyad",
                    caption: "Kişi Adı",
                    dataType: "string"
                }
            ],
        }).dxDataGrid('instance');
    });
</script>

<div class="container mt-4">
    <div class="row">
        <div class="col-5">
            <div id="Products"></div>
        </div>
        <div class="col-5">
            <div id="Organization"></div>
        </div>
        <div class="col-2">
            <button class="btn btn-success w-100" type="button" id="success-contained">SYNC YAP</button>
        </div>
    </div>
    <div class="row mt-4">
        <div id="a1" class="demo-container col-12 my-1 border border-2 border-primary my-2 py-2 rounded-3"><div id="AlmsData"></div></div>
        <div id="p1" class="demo-container col-12 my-1 border border-2 border-info my-2 py-2 rounded-3"><div id="PerculusData"></div></div>
        <div id="c1" class="demo-container col-12 my-1 border border-2 border-success my-2 py-2 rounded-3"><div id="CustomersData"></div></div>
    </div>
</div>
