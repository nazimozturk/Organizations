@{
    ViewBag.Title = "Kurumlar";
}
<script>
$(document).ready(function () {
    var OrganizationID = null;
    LoadInformation();
    async function LoadInformation() {
        $('#AlmsDiv').hide();
        $('#PerculusDiv').hide();
        $('#CustomerDiv').hide();

        // Ürün Arama
        const products = [
            { ID: 1, Name: 'Alms' },
            { ID: 2, Name: 'Perculus' }
        ];
        $('#Products').dxSelectBox({
            dataSource: products,
            showClearButton: true,
            displayExpr: 'Name',
            valueExpr: 'ID',
            placeholder: 'Ürün Arama',
            searchEnabled: true,
            onValueChanged(Data) {
                /*ID=data.value*/
                OrganizationID = null;
                if (Data.value !== null) {
                    if (Data.value == 1) {
                        $('#PerculusDiv').hide();
                        $('#AlmsDiv').show();
                        $("#AlmsData")["dxDataGrid"]("instance").refresh();
                    }
                    else if (Data.value == 2) {
                        $('#AlmsDiv').hide();
                        $('#PerculusDiv').show();
                        $("#PerculusData")["dxDataGrid"]("instance").refresh();
                    }
                    KurumPasif();
                }
                else {
                    $('#PerculusDiv, #AlmsDiv').hide();
                    KurumAktif();
                }
            }
        });

        var Organization = await KurumListesi();

        //Kurum Arama Fonksiyon
        $('#Organization').dxSelectBox({
            dataSource: Organization,
            showClearButton: true,
            displayExpr: 'KurumAdi',
            valueExpr: 'ID',
            placeholder: 'Kurum Arama',
            searchEnabled: true,
            dropDownOptions: { height: 100 },
            onValueChanged(Data) {
                /*ID=data.value*/
                if (Data["value"] !== null) {
                    OrganizationID = Data["value"].split("|")[1];

                    $('#AlmsDiv').show();
                    $('#PerculusDiv').show();
                    $('#CustomerDiv').show();
                    UrunPasif();
                    $("#AlmsData")["dxDataGrid"]("instance").refresh();
                    $("#PerculusData")["dxDataGrid"]("instance").refresh();
                    $("#CustomersData")["dxDataGrid"]("instance").refresh();
                }
                else {
                    UrunAktif();
                    $('#AlmsDiv').hide();
                    $('#PerculusDiv').hide();
                    $('#CustomerDiv').hide();

                    OrganizationID = null;
                }
            }
        });

        async function UrunPasif() {
            if ($('#Organization').select !== null) {
                $('#Products').dxSelectBox({ disabled: true });
            }
        }
        async function UrunAktif() {
            if ($('#Organization').select !== null) {
                $('#Products').dxSelectBox({ disabled: false });
            }
        }
        async function KurumPasif() {
            if ($('#Products').select !== null) {
                $('#Organization').dxSelectBox({ disabled: true });
            }
        }
        async function KurumAktif() {
            if ($('#Products').select !== null) {
                $('#Organization').dxSelectBox({ disabled: false });
                OrganizationID = null;
            }
        }


        function KurumListesi() {
            var ListPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/KurumAra",
                    data: "{}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });
            return ListPromise;
        }

        //Sync Butonu
        $('#success-contained').dxButton({
            stylingMode: 'contained',
            text: 'Sync YAP',
            type: 'success',
            width: '98%',
            onClick() {
                DevExpress.ui.notify('Sync İşlemi Başarılı Bir Şekilde Sonuçlandı');
            }
        });

        //ALMS Litesi
        function AlmsDatasi() {
            var AtamaPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/Alms",
                    data: JSON.stringify({}),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });

            return AtamaPromise;
        }

        function AlmsKurumAra(OrganizationID) {
            var AtamaPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/AlmsKurumAra",
                    data: JSON.stringify({ KurumID: OrganizationID }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });

            return AtamaPromise;
        }

        function PerculusKurumAra(OrganizationID) {
            var AtamaPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/PerculusKurumAra",
                    data: JSON.stringify({ KurumID: OrganizationID }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });

            return AtamaPromise;
        }

        function CustomersKurumAra(OrganizationID) {
            var AtamaPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/CustomersKurumAra",
                    data: JSON.stringify({ KurumID: OrganizationID }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });

            return AtamaPromise;
        }
        // Alms Listesi
        $("#AlmsData").dxDataGrid({
            dataSource: {
                load: async function GetDataForDxDataGrid() {
                    var ListPromise = OrganizationID !== null ? await AlmsKurumAra(OrganizationID) : await AlmsDatasi();
                    return ListPromise;
                }
            },
            paging: { pageSize: 25 },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [10, 25, 50, 100],
                showInfo: true
            },
            remoteOperations: false,
            rowAlternationEnabled: true, //Satırların Renklendirilmesini Sağlıyor
            searchPanel: {
                visible: true,
                highlightCaseSensitive: true,
                placeholder: 'Ara...',
            },
            groupPanel: { visible: true, emptyPanelText: 'ALMS Verileri' },
            grouping: {
                autoExpandAll: false, //Sayfa Açılışınca Gruplar Kapalı Şekilde Gelecek.
                contextMenuEnabled: true
            },
            showBorders: true,
            showRowLines: true,
            //Kolonların Yeniden Boyutlandırılabilir mi ?
            allowColumnReordering: true,
            allowColumnResizing: true,
            filterRow: { visible: true }, //Satırlara Filtre Eklenebilir mi ?
            /*Kolon Gizlenebilir mi ?*/
            columnChooser: {
                enabled: true,
                allowSearch: true
            },
            columnAutoWidth: false,
            selection: { mode: "single" },
            sorting: { mode: "multiple" },
            scrolling: { useNative: true },
            stateStoring: {
                enabled: true, //Kullanıcıya Özel Grid Dizayn Yapılıp Yapılamayacağının Bilgisidir.
                type: "custom",
                savingTimeout: 0
            },
            headerFilter: { visible: true },
            export: {
                enabled: true
            },

            columns: [
                {
                    dataField: "Alms_OrganizationID",
                    caption: "Organizasyon ID",
                    dataType: "string"
                },
                {
                    dataField: "Alms_OrganizationName",
                    caption: "Kurum Adı",
                    dataType: "string"
                },
                {
                    dataField: "ALMS_Database",
                    caption: "Data Base",
                    dataType: "string"
                }
            ],
        }).dxDataGrid('instance');

        // Perculus Listesi
        function PerculusDatasi() {
            var AtamaPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/Perculus",
                    data: JSON.stringify({}),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });

            return AtamaPromise;
        }
        $("#PerculusData").dxDataGrid({
            dataSource: {
                load: async function GetDataForDxDataGrid() {
                    var ListPromise = OrganizationID !== null ? await PerculusKurumAra(OrganizationID) : await PerculusDatasi();
                    return ListPromise;
                }
            },
            paging: { pageSize: 25 },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [10, 25, 50, 100],
                showInfo: true
            },
            remoteOperations: false,
            rowAlternationEnabled: true, //Satırların Renklendirilmesini Sağlıyor
            searchPanel: {
                visible: true,
                highlightCaseSensitive: true,
                placeholder: 'Ara...',
            },
            groupPanel: { visible: true, emptyPanelText: 'Perculus Verileri' },
            grouping: {
                autoExpandAll: false, //Sayfa Açılışınca Gruplar Kapalı Şekilde Gelecek.
                contextMenuEnabled: true
            },
            showBorders: true,
            showRowLines: true,
            //Kolonların Yeniden Boyutlandırılabilir mi ?
            allowColumnReordering: true,
            allowColumnResizing: true,
            filterRow: { visible: true }, //Satırlara Filtre Eklenebilir mi ?
            /*Kolon Gizlenebilir mi ?*/
            columnChooser: {
                enabled: true,
                allowSearch: true
            },
            columnAutoWidth: false,
            selection: { mode: "single" },
            sorting: { mode: "multiple" },
            scrolling: { useNative: true },
            stateStoring: {
                enabled: true, //Kullanıcıya Özel Grid Dizayn Yapılıp Yapılamayacağının Bilgisidir.
                type: "custom",
                savingTimeout: 0
            },
            headerFilter: { visible: true },
            export: {
                enabled: true
            },

            columns: [
                {
                    dataField: "Perculus_Orgid",
                    caption: "Organizasyon ID",
                    dataType: "string"
                },
                {
                    dataField: "Organizasyon_adi",
                    caption: "Kurum Adı",
                    dataType: "string"
                },
                {
                    dataField: "P_Database",
                    caption: "Data Base",
                    dataType: "string"
                }
            ],
        }).dxDataGrid('instance');

        //Customer Listesi
        function CustomersDatasi() {
            var AtamaPromise = new Promise((Resolve) => {
                $.ajax({
                    type: "POST",
                    url: "/WebService.asmx/Customers",
                    data: JSON.stringify({}),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) { Resolve(JSON.parse(msg.d.data)); }
                });
            });

            return AtamaPromise;
        }
        $("#CustomersData").dxDataGrid({
            dataSource: {
                load: async function GetDataForDxDataGrid() {
                    var ListPromise = OrganizationID !== null ? await CustomersKurumAra(OrganizationID) : await CustomersDatasi();
                    return ListPromise;
                }
            },
            paging: { pageSize: 25 },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [10, 25, 50, 100],
                showInfo: true
            },
            remoteOperations: false,
            rowAlternationEnabled: true, //Satırların Renklendirilmesini Sağlıyor
            searchPanel: {
                visible: true,
                highlightCaseSensitive: true,
                placeholder: 'Ara...',
            },
            groupPanel: { visible: true, emptyPanelText: 'Kişi Verileri' },
            grouping: {
                autoExpandAll: false, //Sayfa Açılışınca Gruplar Kapalı Şekilde Gelecek.
                contextMenuEnabled: true
            },
            showBorders: true,
            showRowLines: true,
            //Kolonların Yeniden Boyutlandırılabilir mi ?
            allowColumnReordering: true,
            allowColumnResizing: true,
            filterRow: { visible: true }, //Satırlara Filtre Eklenebilir mi ?
            /*Kolon Gizlenebilir mi ?*/
            columnChooser: {
                enabled: true,
                allowSearch: true
            },
            columnAutoWidth: false,
            selection: { mode: "single" },
            sorting: { mode: "multiple" },
            scrolling: { useNative: true },
            stateStoring: {
                enabled: true, //Kullanıcıya Özel Grid Dizayn Yapılıp Yapılamayacağının Bilgisidir.
                type: "custom",
                savingTimeout: 0
            },
            headerFilter: { visible: true },
            export: {
                enabled: true
            },

            columns: [
                {
                    dataField: "Kurum_adi",
                    caption: "Kurum Adı",
                    dataType: "string"
                },
                {
                    dataField: "Yet_Ad_Soyad",
                    caption: "Kişi Adı",
                    dataType: "string"
                }
            ],
        }).dxDataGrid('instance');
    }
});
</script>

<div class="card text-white bg-secondary mb-3 w-100 mt-2">
    <div class="card-header d-flex justify-content-end"><h1>| Kurumlar</h1></div>
    <div class="card-body d-flex justify-content-between">
        <div>
            <h5 class="card-title">Kurum Arama Sayfası</h5>
            <p class="card-text">Kampus365.com</p>
        </div>
        <img style="width: 56px" src="~/imgs/favo.png" />
    </div>
</div>
<div class="container mt-4">
    <div class="row">
        <div class="col-5">
            <div id="Products"></div>
        </div>
        <div class="col-5">
            <div id="Organization"></div>
        </div>
        <div class="col-2">
            <button class="btn btn-success w-100" type="button" id="success-contained">SYNC YAP</button>
        </div>
    </div>
    <div class="row mt-4">
        <div id="AlmsDiv" class="demo-container col-12 my-1 border border-2 border-info my-2 py-2 rounded-3"><div id="AlmsData"></div></div>
        <div id="PerculusDiv" class="demo-container col-12 my-1 border border-2 border-info my-2 py-2 rounded-3"><div id="PerculusData"></div></div>
        <div id="CustomerDiv" class="demo-container col-12 my-1 border border-2 border-info my-2 py-2 rounded-3"><div id="CustomersData"></div></div>
    </div>
</div>
